- hosts: webservers
  vars:
    path: /var/www/stgn
    db_user: frost
    db_password: frost
  tasks:
    - name: clone web-interface
      become: true
      git: 
        repo: git://github.com/cunctat0r/stgn.git
        dest: "{{ path }}"
        update: yes
      tags: update_site

    - name: Ensure directories are 0755
      become: true
      command: find {{ path }} -type d -exec chmod 0755 {} \;

    - name: Ensure files are 0644
      become: true
      command: find {{ path }} -type f -exec chmod 0644 {} \;
  
    - name: copy Apache config
      become: true
      template: 
        src: ../dotfiles/stgn.conf
        dest: /etc/apache2/sites-available/stgn.conf
      tags: update_site

    - name: enable site
      become: true
      command: a2ensite stgn.conf

    - name: disable default site
      become: true
      command: a2dissite 000-default.conf

    - name: change timezone
      become: true
      lineinfile:
        dest: /etc/php/7.0/apache2/php.ini
        state: present
        regexp: '^date.timezone'
        line: 'date.timezone = Europe/Moscow'
      tags: change_timezone

    - name: copy post_parameters to remote host
      template:
        src: ../dotfiles/post_parameters.sql
        dest: "{{ ansible_env.HOME}}/post_parameters.sql"

    - name: copy monitoringtable to remote host
      template:
        src: ../dotfiles/monitoringtable.sql
        dest: "{{ ansible_env.HOME}}/monitoringtable.sql"

    - name: copy prefill_file to remote host
      template:
        src: "{{ prefill_file }}"
        dest: "{{ ansible_env.HOME}}/prefill_file.sql"

    - name: create table post_parameters
      mysql_db:
        login_user: "{{ db_user }}"
        login_password: "{{ db_password}}"
        name: monitoringdata
        state: import 
        target: "{{ ansible_env.HOME}}/post_parameters.sql"

    - name: create table monitoringtable
      mysql_db:
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        name: monitoringdata
        state: import
        target: "{{ ansible_env.HOME }}/monitoringtable.sql"

    - name: prefill table post_parameters
      mysql_db:
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        name: monitoringdata
        state: import
        target: "{{ ansible_env.HOME }}/prefill_file.sql"

    - name: reload apache
      become: true
      service: 
        name: apache2
        state: reloaded

    - name: restart mysql
      become: true
      service:
        name: mysql
        state: restarted
